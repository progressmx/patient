{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/patients.tsx", "../app/utils/prisma.server.ts", "../app/utils/auth.server.ts", "../app/utils/user.server.ts", "../app/componets/conatinerbody.tsx", "../app/componets/container.tsx", "../app/componets/button.tsx", "../app/componets/newpatient.tsx", "../app/componets/inputbundle.tsx", "../app/componets/select.tsx", "../app/utils/validator.server.ts", "../app/componets/navbar.tsx", "../app/componets/list.tsx", "../app/componets/linkitem.tsx", "../app/routes/logout.ts", "../app/routes/_index.tsx", "../app/routes/login.tsx", "../app/componets/card.tsx", "../app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "// import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport stylesheet from \"~/styles/tailwind.css\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {/* <header>\n          </header> */}\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];", "import React from 'react'\r\nimport { Typography,Button,Dialog} from '@material-tailwind/react'\r\nimport { useState } from 'react'\r\nimport { LoaderFunction,} from \"@remix-run/node\";\r\nimport { getPatients, requireUserId, registerPatient} from \"~/utils/auth.server\";\r\nimport { BsFillPersonPlusFill, BsFillEyeFill} from 'react-icons/bs'\r\nimport PatientContainer from '~/componets/container';\r\nimport NewPatient from '~/componets/newpatient';\r\nimport { Form , useNavigation,useActionData,useLoaderData} from \"@remix-run/react\";\r\nimport { ActionFunction , json} from '@remix-run/node';\r\nimport { validateEmail,validatePassword,validateName} from '~/utils/validator.server';\r\nimport NavBar from '~/componets/navbar';\r\n\r\nconst patients = [\r\n    {\r\n      fullName: \"John Michael\",\r\n      reason: \"Consultation\",\r\n      date: \"23/04/18\",\r\n    },\r\n    {\r\n      fullName: \"Peter Rabbit\",\r\n      reason: \"Bill payment\",\r\n      date: \"23/04/18\",\r\n    },\r\n    {\r\n      fullName: \"John Chibadura\",\r\n      reason: \"Review\",\r\n      date: \"23/04/18\",\r\n    },\r\n    {\r\n      fullName: \"Lil Tunechi\",\r\n      reason: \"Consultation\",\r\n      date: \"23/04/18\",\r\n    },\r\n  ];\r\n\r\n\r\nexport const loader: LoaderFunction = async({request})=>\r\n{\r\n  const userId = await requireUserId(request)\r\n  const patient = await getPatients(userId)\r\n  //console.log(\"patients from : \",patient[0].firstName)\r\n\r\n  return json({patient})\r\n}\r\nexport default function Patients() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(!open);\r\n\r\n    const {patient} = useLoaderData()\r\n\r\n    // console.log(\"pat : \",patient)\r\n\r\n  return (\r\n    <>\r\n         <NavBar />\r\n        <div className=\"relative flex flex-col mx-auto m-4 top-20 md:h-auto md:w-[80%] md:m-[0] md:p-8 \">\r\n            <div className='flex flex-row'>\r\n                <div className='w-2/4 flex flex-col'>\r\n                    <Typography varient=\"h3\" className=\"text-gray-900 text-bold text-2xl\">\r\n                        {!open? \"My patients\":\"\"}\r\n                    </Typography>\r\n                    <Typography varient=\"lead\" className=\"text-gray-900 opacity-80\">\r\n                    {!open? \" List of all the patients you captured\":\"\"}\r\n                    </Typography>\r\n                </div>\r\n                <div className='flex justify-end w-2/4'>\r\n                    <button onClick={handleOpen} className='flex flex-row bg-blue-800 gap-2 w-[50%] justify-center place-items-center h-8 md:p-4 md:w-[40%] rounded text-white'>\r\n                        {!open? <>Add new <BsFillPersonPlusFill/></>: <>View <BsFillEyeFill/></>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {!open? <PatientContainer data={patient} /> : <NewPatient />}\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const action: ActionFunction = async ({request})=>\r\n{\r\n    const form = await request.formData()\r\n    let firstName = form.get(\"firstName\")\r\n    let lastName = form.get(\"lastName\")\r\n    let idNumber = form.get(\"idNumber\")\r\n    let contact = form.get('phone')\r\n    let dob =  form.get('dob')\r\n    let reason = form.get('reason')\r\n    let payment = form.get(\"payment\")\r\n    const userId = await requireUserId(request)\r\n\r\n    const action = \"register\"\r\n\r\n    if(typeof firstName !== \"string\" || typeof lastName !== 'string' || typeof idNumber !== 'string' || typeof reason !== 'string' || typeof payment !== 'string')\r\n    {\r\n        return json(\r\n            {\r\n                error:\"invalid form data\",\r\n                form:action\r\n            },\r\n            {\r\n                status:400\r\n            }\r\n        )\r\n    }\r\n\r\n    const errors = \r\n    {\r\n        firstName:validateName(firstName),\r\n        lastName:validateName(lastName),\r\n        idNumber:validateName(idNumber),\r\n    }\r\n\r\n    if(Object.values(errors).some(Boolean))\r\n    {\r\n        return json({\r\n            errors,fields:\r\n            {\r\n                firstName,lastName,contact,idNumber\r\n            }\r\n        })\r\n    }\r\n\r\n    switch(action)\r\n    {\r\n        case'register':\r\n        {\r\n            firstName = firstName as string\r\n            lastName = lastName as string\r\n            idNumber = idNumber as string\r\n            dob = dob as string\r\n            contact = contact as string\r\n            let  dobStr = new Date(dob).toDateString()\r\n            reason = reason as string\r\n            payment = payment as string\r\n\r\n            return await registerPatient({firstName, lastName,  idNumber,contact, dobStr,  reason, payment,userId})\r\n        }\r\n        default:\r\n            return json({error:'invalid form data'},{status:400})\r\n    }\r\n}", "import { PrismaClient } from '@prisma/client'\r\n\r\nlet prisma: PrismaClient\r\ndeclare global {\r\n  var __db: PrismaClient | undefined\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  prisma = new PrismaClient()\r\n  prisma.$connect()\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient()\r\n    global.__db.$connect()\r\n  }\r\n  prisma = global.__db\r\n}\r\n\r\nexport { prisma }", "import type { RegisterForm, PatientForm } from \"./types.server\";\r\nimport { prisma } from \"./prisma.server\";\r\nimport { json,createCookieSessionStorage,redirect } from \"@remix-run/node\";\r\nimport { createPatient, createUser} from \"./user.server\";\r\nimport type { LoginForm } from \"./types.server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { NULL } from \"sass\";\r\n\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET\r\n\r\nif(!sessionSecret)\r\n{\r\n    throw new Error(\"SESSION_SECRET must be set\")\r\n}\r\n\r\nconst storage = createCookieSessionStorage(\r\n    {\r\n        cookie:\r\n        {\r\n            name:'user-session',\r\n            secure:process.env.NODE_ENV == 'production',\r\n            secrets:[sessionSecret],\r\n            sameSite:'lax',\r\n            path:'/',\r\n            maxAge:60*60*24*30,\r\n            httpOnly:true,\r\n        },\r\n    }\r\n)\r\n\r\n\r\nexport async function register(user : RegisterForm)\r\n{\r\n    const exist = await prisma.user.count({where: {email:user.email}})\r\n\r\n    if(exist)\r\n    {\r\n        console.log(\"user already exist\")\r\n        return json({error: \"User already exist with that email\"},{status : 400})\r\n    }\r\n\r\n    let newUser = await createUser(user)\r\n\r\n    if(!newUser)\r\n    {\r\n        console.log(\"Something went wrong in creating new user\")\r\n        return json(\r\n            {\r\n                error:\"Something went wrong in creating new user\",\r\n                fields:{email:user.email,password:user.password}\r\n            },\r\n            {status:400}\r\n        )\r\n    }\r\n\r\n    return createUserSesseion(newUser.id, '/')\r\n}\r\n\r\nexport async function registerPatient(user : PatientForm)\r\n{\r\n    const exist = await prisma.Patient.count({where: {firstName:user.firstName}})\r\n\r\n    if(exist)\r\n    {\r\n        console.log(\"user already exist\")\r\n        return json({error: \"User already exist with that email\"},{status : 400})\r\n    }\r\n\r\n    let newUser = await createPatient(user)\r\n\r\n    if(!newUser)\r\n    {\r\n    \r\n        console.log(\"Something went wrong in creating new patient\")\r\n        return json(\r\n            {\r\n                error:\"Something went wrong in creating new patient\",\r\n                fields:{\r\n                    firstName:user.firstName,\r\n                    lastName:user.lastName, \r\n                    idNumber:user.idNumber,\r\n                    phone:user.contact,\r\n                    dob:user.dobStr, \r\n                    reason:user.reason, \r\n                    payment:user.payment\r\n                }\r\n            },\r\n            {status:400}\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport async function login({email,password} : LoginForm) \r\n{\r\n    const user = await prisma.user.findUnique(\r\n        {\r\n            where:{email},\r\n        }\r\n    )  \r\n    console.log(user)\r\n    if(!user || !(await bcrypt.compare(password, user.password)))\r\n    {\r\n        console.log(\"Something went wrong while trying to login\")\r\n        return json({error:'incorrect login password'},{status:400})\r\n    }\r\n\r\n    // return {id:user.id,email}\r\n    return createUserSesseion(user.id, '/')\r\n}\r\n\r\n\r\nexport async function createUserSesseion(userId: string,redirectTo: string) \r\n{\r\n    const session = await storage.getSession()\r\n    session.set('userId',userId)\r\n    \r\n    console.log(\"now redirecting user to home page\")\r\n    return redirect(redirectTo,{\r\n        headers:{\r\n            'Set-Cookie':await storage.commitSession(session),\r\n        }\r\n    })\r\n}\r\n\r\nexport async function requireUserId(request: Request, redirectTo: string = new URL(request.url).pathname) \r\n{\r\n    const session = await getUserSession(request)\r\n    const userId = session.get('userId')\r\n    if (!userId || typeof userId !== 'number') {\r\n      const searchParams = new URLSearchParams([['redirectTo', redirectTo]])\r\n      throw redirect(`/login?${searchParams}`)\r\n    }\r\n    console.log(userId)\r\n    return userId\r\n}\r\n\r\nfunction getUserSession(request: Request) \r\n{\r\n    return storage.getSession(request.headers.get('Cookie'))\r\n}\r\n\r\n\r\nasync function getUserId(request: Request) \r\n{\r\n    const session = await getUserSession(request)\r\n    const userId = session.get('userId')\r\n    if (!userId || typeof userId !== 'string') return null\r\n    return userId\r\n}\r\n\r\nexport async function getUser(request: Request)\r\n{\r\n    const userId = await getUserId(request)\r\n    if (typeof userId !== 'number') {\r\n      return null\r\n    }\r\n  \r\n    try {\r\n      const user = await prisma.user.findUnique({\r\n        where: { id: userId },\r\n        select: { id: true, email: true, profile: true },\r\n      })\r\n      return user\r\n    } catch {\r\n      throw logout(request)\r\n    }\r\n}\r\nexport async function getPatients(ownerID: number)\r\n{\r\n    if (typeof ownerID !== 'number') \r\n    {\r\n      return null\r\n    }\r\n    console.log(\"owner id : \",ownerID)\r\n  \r\n    try {\r\n\r\n        console.log(\"patient found\")\r\n      const patient = await prisma.patient.findMany({\r\n        where: { createdBy: ownerID },\r\n        select: { id: true, firstName: true,lastName: true,paymentMethod:true,reason:true,createdOn:true },\r\n      })\r\n      console.log(\"patients : \",patient)\r\n      return patient\r\n\r\n    } catch {\r\n      throw \"no one found\"\r\n    }\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n    const session = await getUserSession(request)\r\n    return redirect('/login', {\r\n      headers: {\r\n        'Set-Cookie': await storage.destroySession(session),\r\n      },\r\n    })\r\n  }", "import type { PatientForm, RegisterForm } from \"./types.server\";\r\nimport { prisma } from \"./prisma.server\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport async function createUser(user: RegisterForm)\r\n{\r\n    const passwordHash = await bcrypt.hash(user.password, 10)\r\n    const newUser = await prisma.user.create(\r\n        {\r\n            data:{\r\n                fullName:user.fullName,\r\n                email: user.email,\r\n                password: passwordHash\r\n            }\r\n        }\r\n    )\r\n\r\n    return {id:newUser.id, email:user.email}\r\n}\r\n\r\nexport async function createPatient(patient: PatientForm)\r\n{\r\n    const joiDate =  new Date().toString();\r\n    const shortJoinDate = new Date(joiDate).toDateString()\r\n\r\n    const newPatient = await prisma.Patient.create(\r\n        {\r\n            data:{\r\n                firstName : patient.firstName,\r\n                lastName:patient.lastName, \r\n                idNumber:patient.idNumber,\r\n                phone:patient.contact, \r\n                dob:patient.dobStr,\r\n                createdOn: shortJoinDate, \r\n                reason:patient.reason, \r\n                paymentMethod:patient.payment,\r\n                owner:\r\n                {\r\n                    connect:\r\n                    {\r\n                        id:patient.userId\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    )\r\n\r\n    return{id:newPatient.id}\r\n}\r\n\r\n", "import React from 'react'\r\nimport type { Children } from './types'\r\n\r\nexport default function ConatinerBody(props: Children) {\r\n  return (\r\n    <>\r\n        <div className={'sm:w-full text-left '+ props.className}>\r\n            {props.children}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\n", "import React from \"react\"\r\nimport type { objType } from \"./types\"\r\nimport ConatinerBody from \"./conatinerbody\"\r\nimport {AiOutlineDelete, AiOutlineEdit} from \"react-icons/ai\"\r\nimport { Typography} from \"@material-tailwind/react\"\r\nimport Button from \"./button\"\r\n\r\nexport default function PatientContainer(props: objType)\r\n{\r\n  return (\r\n    <div className='flex flex-col gap-4 mt-6'>\r\n        {\r\n            props.data.map((patient)=>(\r\n                <div key={patient.id} className=\"flex flex-col gap-4 p-4 shadow rounded border-[1px] border-gray-400 md:flex-row\">\r\n                    <ConatinerBody className=\" md:w-[30%]\">{patient.firstName} {patient.lastName}</ConatinerBody>\r\n                    <ConatinerBody className=\" md:w-[30%]\">{patient.reason}</ConatinerBody>\r\n                    <ConatinerBody className=\" md:w-[30%]\">{patient.paymentMethod}</ConatinerBody>\r\n                    <ConatinerBody className=\" md:w-[30%]\">{patient.createdOn}</ConatinerBody>\r\n                    <ConatinerBody className=\" md:w-[10%]\">\r\n                        <Button className=\"bg-green-500\">\r\n                            Edit <AiOutlineEdit className='w-5 h-5'></AiOutlineEdit>\r\n                        </Button>\r\n                    </ConatinerBody>\r\n                    <ConatinerBody className=\"md:w-[10%]\">\r\n                        <Button className=\"bg-red-500\">\r\n                            Delete <AiOutlineDelete className='w-5 h-5'></AiOutlineDelete>\r\n                        </Button>\r\n                    </ConatinerBody>\r\n                </div>\r\n            ))\r\n        }\r\n    </div>\r\n  )\r\n}\r\n", "import React from 'react'\r\nimport { Children } from './types'\r\n\r\nfunction Button(props: Children) {\r\n  return (\r\n    <>\r\n        <button className={\"flex flex-row justify-center place-items-center w-full gap-2 hover:cursor-pointer rounded-sm p-[10] \" + props.className}>\r\n            {props.children}\r\n        </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Button", "import React from 'react'\r\nimport { Input,Typography,Card,Button} from '@material-tailwind/react'\r\nimport { Form, useNavigation } from '@remix-run/react'\r\nimport InputBundle from './inputbundle'\r\nimport Select from './select'\r\nconst text_fields = [\r\n    {\r\n        name:\"firstName\",\r\n        label:\"first name\"\r\n    },\r\n    {\r\n        name:\"lastName\",\r\n        label:\"last name\"\r\n    },\r\n    {\r\n        name:\"phone\",\r\n        label:\"phone number\"\r\n    },\r\n    {\r\n        name:\"idNumber\",\r\n        label:\"id / passport number\"\r\n    }\r\n]\r\n\r\nconst visit_reason = [\r\n    {\r\n        label:\"Consultation\",\r\n        value:\"consult\"\r\n    },\r\n    {\r\n        label:\"Check-up\",\r\n        value:\"check\"\r\n    },\r\n    {\r\n        label:\"Bill payment\",\r\n        value:\"bill\"\r\n    },\r\n]\r\nconst payment_method = [\r\n    {\r\n        label:\"Cash\",\r\n        value:\"cash\"\r\n    },\r\n    {\r\n        label:\"Medical AID\",\r\n        value:\"medicalAid\"\r\n    },\r\n]\r\n\r\n\r\nfunction NewPatient() {\r\n\r\n    const navigation = useNavigation();\r\n    const isSubmitting = navigation.state === 'submitting';\r\n    \r\n  return (\r\n    <div className='relative flex justify-center place-items-center w-full'>\r\n        <Card color=\"transparent\" shadow={false} className='w-[100vw] mt-4 md:w-[70vw] lg:w-[30vw] p-6'>\r\n            <Typography variant=\"h4\" className=\"text-bold text-gray-900 text-center\"> Add new patient</Typography>\r\n            <Typography className=\"text-gray-800 opacity-70 text-center\">Fill in the details</Typography>\r\n            <Form method='post'>\r\n                <div className='flex flex-col gap-4 mt-4'>\r\n                   <InputBundle input_bundle={text_fields} />\r\n                   <Input type=\"date\" label='date of bith' name=\"dob\"></Input>\r\n                    <Select label=\"visit reason\" name=\"reason\" select_group={visit_reason}/>\r\n                    <Select label=\"payment methon\" name=\"payment\" select_group={payment_method}/>\r\n                    <Button disabled={isSubmitting} type='submit'> {isSubmitting ? 'Adding...': 'Add Patient'}</Button>\r\n                </div>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewPatient", "import React from 'react'\r\nimport { bundle} from './types'\r\nimport { Input } from '@material-tailwind/react'\r\n\r\nfunction InputBundle(props: bundle){\r\n  return (\r\n    <>\r\n        {\r\n             props.input_bundle.map((field)=>(\r\n                <Input size=\"md\" color=\"indigo\" label={field.label} name={field.name} />\r\n            ))\r\n        }\r\n</>\r\n  )\r\n}\r\n\r\nexport default InputBundle", "import React from 'react'\r\nimport type { select_bundle } from './types'\r\n// import { Select} from '@material-tailwind/react'\r\n\r\nfunction Select(props:select_bundle) {\r\n  return (\r\n    <>\r\n        <select name={props.name} className='rounded-md border-[1px] border-gray-400 focus:ring-[2px]  focus:ring-indigo-500 h-10 p-2'>\r\n        {\r\n            props.select_group.map((reason)=>(\r\n                <option value={reason.value} className='rounded p-4 m-1'>{reason.label}</option>\r\n            ))\r\n        }\r\n        </select>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Select", "\r\n\r\n\r\nexport const validateEmail = (email: string): string | undefined => {\r\n    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    if (!email.length || !validRegex.test(email)) {\r\n      return \"Please enter a valid email address\"\r\n    }\r\n  }\r\n  \r\n  export const validatePassword = (password: string): string | undefined => {\r\n    if (password.length < 5) {\r\n      return \"Please enter a password that is at least 5 characters long\"\r\n    }\r\n  }\r\n  \r\n  export const validateName = (name: string): string | undefined => {\r\n    if (!name.length) return `Please enter a value`\r\n  }", "import { Typography } from '@material-tailwind/react'\r\nimport React from 'react'\r\nimport List from \"~/componets/list\";\r\nimport LinkItem from \"~/componets/linkitem\";\r\nimport {FiUsers} from \"react-icons/fi\"\r\nimport {FaUsersCog} from \"react-icons/fa\"\r\nimport {AiOutlineHome,AiOutlineCalendar,AiOutlinePieChart,AiOutlineLogout} from \"react-icons/ai\"\r\nimport { NavLink } from \"@remix-run/react\";\r\n\r\nconst data = [\r\n  {\r\n      name:\"Dashboard\",\r\n      link:\"./\",\r\n      icon:AiOutlineHome\r\n  },\r\n  {\r\n      name:\"Patients\",\r\n      link:\"/patients\",\r\n      icon:FiUsers\r\n  },\r\n]\r\n\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <div className='flex flex-row shadow mx-auto h-[60px] bg-[#00091A]'>\r\n        <div className='flex flex-row gap-1 w-[10%] justify-start place-items-center md:justify-center md:place-items-center md:w-[40%]'>\r\n            <Typography variant=\"h4\" className=\"text-bold text-gray-400\">\r\n                Octaven\r\n            </Typography>\r\n        </div>\r\n        <div className='flex flex-row gap-1 justify-center w-[90%] place-items-center md:justify-center md:place-items-center md:w-[60%]'>\r\n            <List className=\"flex-row\">\r\n                {\r\n                    data.map((links)=>(\r\n                    <LinkItem key={links.name}>\r\n                        <links.icon className='w-5 h-5 mr-2' />\r\n                        <NavLink to={links.link}>{links.name}</NavLink>\r\n                    </LinkItem>\r\n                    ))\r\n                }\r\n                <form action=\"./logout\" method=\"post\">\r\n                    <button className=\"bg-transparent\">\r\n                        <LinkItem>\r\n                        <AiOutlineLogout className='w-5 h-5 mr-2' />\r\n                            log out\r\n                        </LinkItem>\r\n                    </button>\r\n                </form>\r\n            </List>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n", "import React from 'react'\r\ntype Children = \r\n{\r\n    children : React.ReactNode\r\n    className?: string\r\n}\r\nexport default function List(props: Children) {\r\n  return (\r\n    <>\r\n        <ul className={'flex '+props.className}>\r\n            {props.children}\r\n        </ul>\r\n    </>\r\n  )\r\n}\r\n", "import React from 'react'\r\ntype Children = \r\n{\r\n    children : React.ReactNode\r\n}\r\nfunction LinkItem(props: Children) {\r\n  return (\r\n    <>\r\n        <li className='flex mb-2 p-2 text-white text-sm hover:cursor-pointer hover:bg-gray-500 rounded hover:text-black'>\r\n            {props.children}\r\n        </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LinkItem", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { logout } from \"~/utils/auth.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => logout(request);\r\nexport const loader: LoaderFunction = async () => redirect(\"/\");", "import { LoaderFunction } from \"@remix-run/node\";\nimport { requireUserId } from \"~/utils/auth.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport SideNavContainer from \"~/componets/sidenavcontainer\";\nimport NavBar from \"~/componets/navbar\";\n\nexport const loader: LoaderFunction = async({request})=>\n{\n  const userId = await requireUserId(request)\n  return userId\n}\n\nexport default function Index() {\n\n  const userId = useLoaderData()\n  return (\n    <>\n       <NavBar />\n      <div className='relative top-20 left-[20%] h-auto w-[80%] p-8 flex flex-col'>\n        <h2>Hello user with id {userId} </h2>\n      </div>\n    </>\n  );\n}\n", "import Card from '~/componets/card'\r\nimport {Typography,Input,Button} from \"@material-tailwind/react\";\r\nimport { Form , useNavigation, useActionData,useLoaderData} from \"@remix-run/react\";\r\nimport { ActionFunction,json,LoaderFunction, redirect } from '@remix-run/node';\r\nimport {login,getUser} from '~/utils/auth.server';\r\nimport { useRef,useEffect, useState } from 'react';\r\nimport { validateEmail,validatePassword,validateName} from '~/utils/validator.server';\r\nimport { Action } from '@remix-run/router';\r\n\r\n\r\nexport const loader: LoaderFunction = async({request}) =>\r\n{\r\n    return (await getUser(request))? redirect('/'):null\r\n}\r\n\r\nexport default function Signin() {\r\n\r\n    const actionData = useActionData()\r\n    const firstLoad = useRef(true)\r\n    // const [errors, setErrors] = useState(actionData?.errors || {})\r\n    // const errors = useLoaderData()\r\n\r\n  return (\r\n    <div className='absolute flex justify-center place-items-center  h-full w-full'>\r\n        <Card>\r\n            <Typography variant=\"h4\" className='text-gray-900'>Log in</Typography>\r\n            <Typography className='text-gray-900 font-normal'>fill in the details to login</Typography>\r\n            <Form method=\"post\">\r\n                <div className='m-4 flex flex-col gap-4'>\r\n                    {/* <span>{errors.error}</span> */}\r\n                    <Input label=\"email\" name=\"email\"></Input>\r\n                    <Input type=\"password\" label=\"password\" name=\"password\" ></Input>\r\n                    <input type=\"hidden\" name=\"__action\" value=\"register\" />\r\n                    <Button type=\"submit\">login</Button>\r\n                    <Typography>\r\n                        Dont have and account ? <a href=\"/join\" className='text-blue-400'>Create account</a>\r\n                    </Typography>\r\n                </div>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\nexport const action: ActionFunction = async ({request})=>\r\n{\r\n    const form = await request.formData()\r\n    const action = \"login\"\r\n    const email = form.get('email')\r\n    const password = form.get('password')\r\n\r\n    if(typeof email !== \"string\" || typeof password !== 'string')\r\n    {\r\n        return json(\r\n            {\r\n                error:\"invalid form data\",\r\n                form:action\r\n            },\r\n            {\r\n                status:400\r\n            }\r\n        )\r\n    }\r\n\r\n    const errors = \r\n    {\r\n        email:validateEmail(email),\r\n        password:validatePassword(password),\r\n    }\r\n\r\n    if(Object.values(errors).some(Boolean))\r\n    {\r\n        return json({\r\n            errors,fields:\r\n            {\r\n                email,\r\n                password\r\n            },\r\n            form:action\r\n        })\r\n    }\r\n\r\n    switch(action)\r\n    {\r\n        case'login':\r\n        {\r\n            return await login({email,password})\r\n        }\r\n        default:\r\n            console.log(\"invalid login\")\r\n            return json({error:'invalid form data'},{status:400})\r\n    }\r\n}", "import React from 'react'\r\ntype Children = {\r\n    children : React.ReactNode\r\n}\r\n\r\nfunction Card(props : Children) {\r\n  return (\r\n    <div className='flex flex-col gap-2 bg-white shadow rounded-md p-6'>\r\n        {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card", "import Card from '~/componets/card'\r\nimport {Typography,Input,Button} from \"@material-tailwind/react\";\r\nimport { Form , useNavigation, useActionData,useLoaderData} from \"@remix-run/react\";\r\nimport { ActionFunction , json} from '@remix-run/node';\r\nimport { validateEmail,validatePassword,validateName} from '~/utils/validator.server';\r\nimport { Action } from '@remix-run/router';\r\nimport { register } from '~/utils/auth.server';\r\n\r\nexport default function join() {\r\n\r\n    // const errors = useLoaderData()\r\n\r\n  return (\r\n    <div className='absolute flex justify-center place-items-center  h-full w-full'>\r\n        <Card>\r\n            <Typography variant=\"h4\" className='text-gray-900'>Create and account</Typography>\r\n            <Typography className='text-gray-900 font-normal'>fill in the details to sign-up</Typography>\r\n            <Form method='post'>\r\n                {/* <span>{errors.error}</span> */}\r\n                <div className='m-4 flex flex-col gap-4'>\r\n                    <Input label=\"full name\" name=\"fullName\" required></Input>\r\n                    <Input label=\"email\" name=\"email\" required></Input>\r\n                    <Input type=\"password\" label=\"password\" name=\"password\" required></Input>\r\n                    <input type=\"hidden\" name=\"__action\" value=\"register\" />\r\n                    <Button type=\"submit\">login</Button>\r\n                    <Typography>\r\n                        Already have an account ? <a href=\"/login\" className='text-blue-400'>Login</a>\r\n                    </Typography>\r\n                </div>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const action: ActionFunction = async ({request})=>\r\n{\r\n    const form = await request.formData()\r\n    const email = form.get('email')\r\n    const password = form.get('password')\r\n    let fullName = form.get(\"fullName\")\r\n    const action = \"register\"\r\n\r\n    if(typeof email !== \"string\" || typeof password !== 'string')\r\n    {\r\n        return json(\r\n            {\r\n                error:\"invalid form data\",\r\n                form:action\r\n            },\r\n            {\r\n                status:400\r\n            }\r\n        )\r\n    }\r\n\r\n    const errors = \r\n    {\r\n        email:validateEmail(email),\r\n        password:validatePassword(password),\r\n    }\r\n\r\n    if(Object.values(errors).some(Boolean))\r\n    {\r\n        return json({\r\n            errors,fields:\r\n            {\r\n                email,\r\n                password\r\n            }\r\n        })\r\n    }\r\n\r\n    switch(action)\r\n    {\r\n        case'register':\r\n        {\r\n            fullName = fullName as string\r\n\r\n            return await register({email,password,fullName})\r\n        }\r\n        default:\r\n            return json({error:'invalid form data'},{status:400})\r\n    }\r\n}", "export default {'entry':{'module':'/build/entry.client-AIP6T7QQ.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-4FXQRTTB.js','/build/_shared/chunk-OKXP6DZS.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-MU7CU4DP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-JMYR5PRS.js','imports':['/build/_shared/chunk-AOAVXNEV.js','/build/_shared/chunk-342ARKZ2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-GPPGFXR3.js','imports':['/build/_shared/chunk-RJOGSRNZ.js','/build/_shared/chunk-QA6CUXUH.js','/build/_shared/chunk-342ARKZ2.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-BVY4UAKE.js','imports':['/build/_shared/chunk-RJOGSRNZ.js','/build/_shared/chunk-QA6CUXUH.js','/build/_shared/chunk-342ARKZ2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-MMH6Q26W.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/patients':{'id':'routes/patients','parentId':'root','path':'patients','index':undefined,'caseSensitive':undefined,'module':'/build/routes/patients-7Z4TLM7I.js','imports':['/build/_shared/chunk-AOAVXNEV.js','/build/_shared/chunk-QA6CUXUH.js','/build/_shared/chunk-342ARKZ2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'46de6a7f','hmr':{'runtime':'/build/_shared\\\\chunk-OKXP6DZS.js','timestamp':1690421187419},'url':'/build/manifest-46DE6A7F.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\hp\\\\Documents\\\\subtle\\\\remix app\\\\tsx\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/patients.tsx\";\nimport * as route2 from \"./routes/logout.ts\";\nimport * as route3 from \"./routes/_index.tsx\";\nimport * as route4 from \"./routes/login.tsx\";\nimport * as route5 from \"./routes/join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/patients\": {\n      id: \"routes/patients\",\n      parentId: \"root\",\n      path: \"patients\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_react", "import_node", "bcrypt", "import_bcryptjs", "bcrypt", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_ai", "import_react", "import_jsx_dev_runtime", "links", "import_jsx_dev_runtime", "action", "action", "loader", "import_node", "action", "loader", "loader", "import_react", "import_jsx_dev_runtime", "loader", "action", "loader", "import_jsx_dev_runtime", "Card", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "action", "import_react", "import_node", "import_jsx_dev_runtime", "action"]
}
